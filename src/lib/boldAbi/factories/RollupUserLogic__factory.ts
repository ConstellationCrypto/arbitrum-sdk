/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupUserLogic,
  RollupUserLogicInterface,
} from "../RollupUserLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "AssertionConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requiredStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challengeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "confirmPeriodBlocks",
        type: "uint64",
      },
    ],
    name: "AssertionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedAssertion",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "VALIDATOR_AFK_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "latestStakedAssertion",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "addToDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyTrustFastConfirmer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IEdgeChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
        ],
        internalType: "struct ExecutionState",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "computeAssertionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
        ],
        internalType: "struct ExecutionState",
        name: "confirmState",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "winningEdgeId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "requiredStake",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nextInboxPosition",
            type: "uint64",
          },
        ],
        internalType: "struct ConfigData",
        name: "prevConfig",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "confirmAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
        ],
        internalType: "struct ExecutionState",
        name: "confirmState",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "fastConfirmAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "fastConfirmNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisAssertionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getAssertion",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isFirstChild",
            type: "bool",
          },
          {
            internalType: "enum AssertionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "configHash",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionNode",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getAssertionCreationBlockForLogLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getFirstChildCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getSecondChildCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "latestStakedAssertion",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "isFirstChild",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "isPending",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedAssertion",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "newStakeOnNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "reduceDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterValidatorAfk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnOldDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct ExecutionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "stakeOnNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
        ],
        internalType: "struct ExecutionState",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "validateAssertionHash",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "requiredStake",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nextInboxPosition",
            type: "uint64",
          },
        ],
        internalType: "struct ConfigData",
        name: "configData",
        type: "tuple",
      },
    ],
    name: "validateConfig",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052620000196200003a60201b62001ba81760201c565b15156080523060a0524660c0523480156200003357600080fd5b5062000108565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b1790529051600091829182916064916200007a9190620000d7565b600060405180830381855afa9150503d8060008114620000b7576040519150601f19603f3d011682016040523d82523d6000602084013e620000bc565b606091505b5091509150818015620000d0575080516020145b9250505090565b6000825160005b81811015620000fa5760208186018101518583015201620000de565b506000920191825250919050565b60805160a05160c0516143c76200014d60003960006118020152600081816112c301528181611878015261190e0152600081816108e40152612a8e01526143c76000f3fe608060405234801561001057600080fd5b50600436106103625760003560e01c80636b00cea9116101c8578063c2c2e68e11610104578063ee35f327116100a2578063f3f0a03e1161007c578063f3f0a03e1461084e578063f9cee9df14610861578063facd743b14610874578063fb0e722b1461089757600080fd5b8063ee35f3271461080a578063ef40a67014610812578063f065de3f1461083b57600080fd5b8063dff69787116100de578063dff6978714610765578063e531d8c71461076d578063e78cea9214610780578063e8bd49221461079357600080fd5b8063c2c2e68e14610737578063c4d66de81461073f578063ce11e6ab1461075257600080fd5b806388302884116101715780639a8a05921161014b5780639a8a059214610638578063a23c44b114610641578063aa38a6e714610711578063bc45e0ae1461072457600080fd5b806388302884146106075780638da5cb5b146106275780638ee1a1261461062f57600080fd5b806371ef232c116101a257806371ef232c146105e257806376a61018146105eb57806376e7e23b146105fe57600080fd5b80636b00cea9146105a95780636ddd3744146105bc5780636e981c75146105cf57600080fd5b8063353325e0116102a257806355840a58116102405780635c975abb1161021a5780635c975abb1461055857806361373919146105635780636177fd181461056b57806365f7f80d146105a157600080fd5b806355840a581461052557806356bbc9e61461053d57806357ef4ab91461055057600080fd5b80634ceccfe51161027c5780634ceccfe5146104ed5780634db519d4146104f757806351ed6a301461050a57806352d1902d1461051d57600080fd5b8063353325e0146104c957806342500b85146104d157806345e38b64146104e457600080fd5b80631b1689e91161030f5780632abdd230116102e95780632abdd230146104345780632e7acfa6146104605780632f30cabd1461048d57806330836228146104b657600080fd5b80631b1689e9146104055780631cb645151461040e5780631e83d30f1461042157600080fd5b806312ab3d3b1161034057806312ab3d3b146103cd57806313c56ca7146103ea57806318baaab9146103fd57600080fd5b8063023a96fe1461036757806304972af91461039757806311715585146103ac575b600080fd5b60695461037a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103aa6103a5366004613b33565b6108aa565b005b6103bf6103ba366004613b60565b6108c4565b60405190815260200161038e565b607a546103da9060ff1681565b604051901515815260200161038e565b6103bf6103f8366004613b60565b6108e0565b6103aa610a2d565b6103bf60795481565b6103aa61041c366004613b8c565b610b01565b6103aa61042f366004613b60565b610e90565b6103bf610442366004613bce565b6001600160a01b031660009081526076602052604090206001015490565b6066546104749067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161038e565b6103bf61049b366004613bce565b6001600160a01b031660009081526077602052604090205490565b6103da6104c4366004613b60565b610f07565b6103bf610f23565b6103aa6104df366004613beb565b610f58565b6103bf60715481565b6103bf6203138081565b6103aa610505366004613c2a565b610fd1565b60705461037a906001600160a01b031681565b6103bf6112b6565b607a5461037a9061010090046001600160a01b031681565b6103bf61054b366004613b60565b61137b565b6103aa61139e565b60335460ff166103da565b6103bf611416565b6103da610579366004613bce565b6001600160a01b0316600090815260766020526040902060020154600160401b900460ff1690565b6073546103bf565b6103bf6105b7366004613c87565b611499565b61037a6105ca366004613cd5565b6114be565b6103aa6105dd366004613b8c565b6114f8565b6103bf60785481565b6103aa6105f9366004613cf0565b6116b5565b6103bf60675481565b61061a610615366004613b60565b6116d6565b60405161038e9190613d5c565b61037a6117a2565b6103bf60685481565b6103bf60655481565b6106d261064f366004613bce565b604080516080810182526000808252602082018190529181018290526060810191909152506001600160a01b03166000908152607660209081526040918290208251608081018452815481526001820154928101929092526002015467ffffffffffffffff811692820192909252600160401b90910460ff161515606082015290565b60405161038e9190815181526020808301519082015260408083015167ffffffffffffffff169082015260609182015115159181019190915260800190565b606d5461037a906001600160a01b031681565b606e5461037a906001600160a01b031681565b6103aa6117ac565b6103aa61074d366004613bce565b61186e565b606c5461037a906001600160a01b031681565b607554610474565b6103da61077b366004613b60565b611a13565b606b5461037a906001600160a01b031681565b6107d86107a1366004613bce565b60766020526000908152604090208054600182015460029092015490919067ffffffffffffffff811690600160401b900460ff1684565b60405161038e9493929190938452602084019290925267ffffffffffffffff1660408301521515606082015260800190565b61037a611a43565b6103bf610820366004613bce565b6001600160a01b031660009081526076602052604090205490565b606f5461037a906001600160a01b031681565b6103aa61085c366004613dbd565b611aca565b6103aa61086f366004613de9565b611b41565b6103da610882366004613bce565b60726020526000908152604090205460ff1681565b606a5461037a906001600160a01b031681565b6108c0816108b784611c6e565b60010154611ccf565b5050565b60006108cf82611c6e565b5467ffffffffffffffff1692915050565b60007f00000000000000000000000000000000000000000000000000000000000000001561096f576000828152607b6020526040902054806109695760405162461bcd60e51b815260206004820152600c60248201527f4e4f5f415353455254494f4e000000000000000000000000000000000000000060448201526064015b60405180910390fd5b92915050565b600061097a83611c6e565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b8304811615156060830152929350610a1092909184916080840191600160c81b90041660028111156109ec576109ec613d28565b60028111156109fd576109fd613d28565b8152602001600182015481525050611dd4565b54600160801b900467ffffffffffffffff1692915050565b919050565b607a5460ff1615610a805760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610960565b610a88611e39565b610ad45760405162461bcd60e51b815260206004820152601160248201527f56414c494441544f525f4e4f545f41464b0000000000000000000000000000006044820152606401610960565b607a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b3360009081526072602052604090205460ff1680610b215750607a5460ff165b610b5d5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b610b65611f49565b801580610b9657506000610b7882611c6e565b54600160c81b900460ff166002811115610b9457610b94613d28565b145b610be25760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f5345454e0000000000000000006044820152606401610960565b33600090815260766020526040902060020154600160401b900460ff16610c385760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610960565b3360009081526076602052604090205460608301351115610c9b5760405162461bcd60e51b815260206004820152601260248201527f494e53554646494349454e545f5354414b4500000000000000000000000000006044820152606401610960565b6000610cbe8335610cb436869003860160e08701613f5a565b6020860135611f9c565b9050610d37610ccc82611c6e565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b9091041660028111156109ec576109ec613d28565b3360009081526076602052604090206001015481811480610d6b57506000610d5e82611c6e565b5467ffffffffffffffff16115b610db75760405162461bcd60e51b815260206004820152601860248201527f5354414b45445f4f4e5f414e4f544845525f4252414e434800000000000000006044820152606401610960565b6000610dc283611c6e565b54610dde90600160801b900467ffffffffffffffff1643613fae565b9050607154811015610e325760405162461bcd60e51b815260206004820152600a60248201527f54494d455f44454c5441000000000000000000000000000000000000000000006044820152606401610960565b6000610e3f868587611fe0565b3360009081526076602052604090206001018190559050610e5f81611c6e565b54600160c01b900460ff16610e8857606f54610e88906001600160a01b03166060880135612b31565b505050505050565b3360009081526072602052604090205460ff1680610eb05750607a5460ff165b610eec5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b610ef4611f49565b610efd33612bd6565b6108c03382612cc7565b6000610f1282611c6e565b54600160c01b900460ff1692915050565b6000610f2d613ad8565b6040805180820190915281815260016020820152600080610f4f818481611f9c565b94505050505090565b610f60611f49565b607a5461010090046001600160a01b03163314610fbf5760405162461bcd60e51b815260206004820152601260248201527f4e4f545f464153545f434f4e4649524d455200000000000000000000000000006044820152606401610960565b610fcb84848484612d99565b50505050565b3360009081526072602052604090205460ff1680610ff15750607a5460ff165b61102d5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b611035611f49565b600061104087611c6e565b9050600061104d87611c6e565b905061105d848260010154611ccf565b61106d6080850160608601613cd5565b825461108a9190600160801b900467ffffffffffffffff16613fc1565b67ffffffffffffffff164310156110e35760405162461bcd60e51b815260206004820152600f60248201527f4245464f52455f444541444c494e4500000000000000000000000000000000006044820152606401610960565b60735487146111345760405162461bcd60e51b815260206004820152601960248201527f505245565f4e4f545f4c41544553545f434f4e4649524d4544000000000000006044820152606401610960565b8054600160401b900467ffffffffffffffff16156112a05761115a848260010154611ccf565b6069546040517ffda2892e000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063fda2892e906024016101a060405180830381865afa1580156111be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e29190614013565b905088816101000151146112385760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f57494e4e4552000000000000000000000000000000000000000000006044820152606401610960565b6001816101400151600181111561125157611251613d28565b1461129e5760405162461bcd60e51b815260206004820152601260248201527f454447455f4e4f545f434f4e4649524d454400000000000000000000000000006044820152606401610960565b505b6112ac88888886612d99565b5050505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113565760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c00000000006064820152608401610960565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b600061138682611c6e565b54600160401b900467ffffffffffffffff1692915050565b3360009081526072602052604090205460ff16806113be5750607a5460ff165b6113fa5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b611402611f49565b61140b33612bd6565b61141433612fb0565b565b6000611420611f49565b600061142b33613027565b90506000811161147d5760405162461bcd60e51b815260206004820152601460248201527f4e4f5f46554e44535f544f5f57495448445241570000000000000000000000006044820152606401610960565b607054611494906001600160a01b031633836130a8565b905090565b60006114b4846114ae36869003860186613f5a565b84611f9c565b90505b9392505050565b600060758267ffffffffffffffff16815481106114dd576114dd6140cc565b6000918252602090912001546001600160a01b031692915050565b611500611f49565b8061154d5760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f484153480000000000000000006044820152606401610960565b600061155882611c6e565b54600160c81b900460ff1690506000611588843561157e36879003870160e08801613f5a565b6020870135611f9c565b9050611596610ccc82611c6e565b60008260028111156115aa576115aa613d28565b036115f25760006115bc858386611fe0565b90506115c781611c6e565b54600160c01b900460ff166115f057606f546115f0906001600160a01b03166060870135612b31565b505b606b54610fcb90849083906101808801906001600160a01b03166316bf5579600161162a611625368d90038d01866140e2565b613151565b61163491906140fe565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815267ffffffffffffffff9091166004820152602401602060405180830381865afa158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df919061411f565b6116be83613166565b6116c88282610b01565b6116d18361323e565b505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915261171182611c6e565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b90910416600281111561177c5761177c613d28565b600281111561178d5761178d613d28565b81526020016001820154815250509050919050565b6000611494613256565b607a5460ff16156117ff5760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610960565b467f000000000000000000000000000000000000000000000000000000000000000003610ad45760405162461bcd60e51b815260206004820152601460248201527f434841494e5f49445f4e4f545f4348414e4745440000000000000000000000006044820152606401610960565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361190c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610960565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661193e613289565b6001600160a01b0316146119ba5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610960565b6001600160a01b038116611a105760405162461bcd60e51b815260206004820152601060248201527f4e4545445f5354414b455f544f4b454e000000000000000000000000000000006044820152606401610960565b50565b60006001611a2083611c6e565b54600160c81b900460ff166002811115611a3c57611a3c613d28565b1492915050565b606b54604080517fee35f32700000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163ee35f3279160048083019260209291908290030181865afa158015611aa6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114949190614138565b3360009081526072602052604090205460ff1680611aea5750607a5460ff165b611b265760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b611b2e611f49565b611b3882826132b1565b6108c08161323e565b611b5a82611b5436869003860186613f5a565b83611f9c565b8414610fcb5760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f415353455254494f4e5f48415348000000000000000000006044820152606401610960565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f051038f200000000000000000000000000000000000000000000000000000000179052905160009182918291606491611c149190614179565b600060405180830381855afa9150503d8060008114611c4f576040519150601f19603f3d011682016040523d82523d6000602084013e611c54565b606091505b5091509150818015611c67575080516020145b9250505090565b600081611cbd5760405162461bcd60e51b815260206004820152601b60248201527f415353455254494f4e5f49445f43414e4e4f545f42455f5a45524f00000000006044820152606401610960565b50600090815260746020526040902090565b611d8682356020840135611ce96060860160408701613bce565b611cf96080870160608801613cd5565b611d0960a0880160808901613cd5565b60408051602080820197909752808201959095526bffffffffffffffffffffffff19606094851b16938501939093527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b81166074860152911b16607c8301528051606481840301815260849092019052805191012090565b81146108c05760405162461bcd60e51b815260206004820152601460248201527f434f4e4649475f484153485f4d49534d415443480000000000000000000000006044820152606401610960565b600081608001516002811115611dec57611dec613d28565b03611a105760405162461bcd60e51b815260206004820152601360248201527f415353455254494f4e5f4e4f545f4558495354000000000000000000000000006044820152606401610960565b600080611e4d611e4860735490565b611c6e565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b909104166002811115611eb857611eb8613d28565b6002811115611ec957611ec9613d28565b81526020016001820154815250509050806040015167ffffffffffffffff16600003611ef757600091505090565b805167ffffffffffffffff1615611f2b5780514390611f2490620313809067ffffffffffffffff16614195565b1091505090565b4362031380826040015167ffffffffffffffff16611f249190614195565b60335460ff16156114145760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610960565b60006114b484611fab8561337e565b604080516020808201949094528082019290925260608083018790528151808403909101815260809092019052805191012090565b6000611ff2604085016108b785611c6e565b6001612006610220860161020087016141a8565b600281111561201757612017613d28565b148061204557506002612032610220860161020087016141a8565b600281111561204357612043613d28565b145b6120915760405162461bcd60e51b815260206004820152601060248201527f4241445f41465445525f535441545553000000000000000000000000000000006044820152606401610960565b826120b385356120a936889003880160e08901613f5a565b6020880135611f9c565b146121005760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f4245464f52455f53544154450000000000000000000000006044820152606401610960565b6001612114610180860161016087016141a8565b600281111561212557612125613d28565b146121725760405162461bcd60e51b815260206004820152600f60248201527f4241445f505245565f53544154555300000000000000000000000000000000006044820152606401610960565b600061217d84611c6e565b905060008080612199611625368a90038a016101808b016140e2565b905060006121b2611625368b90038b0160e08c016140e2565b90508067ffffffffffffffff168267ffffffffffffffff1610156122185760405162461bcd60e51b815260206004820152600f60248201527f494e424f585f4241434b574152445300000000000000000000000000000000006044820152606401610960565b61222860e08a0160c08b01613cd5565b67ffffffffffffffff168267ffffffffffffffff16111561228b5760405162461bcd60e51b815260206004820152600d60248201527f494e424f585f544f4f5f464152000000000000000000000000000000000000006044820152606401610960565b600261229f6102208b016102008c016141a8565b60028111156122b0576122b0613d28565b036123595760006122d26122cd368c90038c016101808d016140e2565b6133c0565b67ffffffffffffffff161115612354576122f260e08a0160c08b01613cd5565b67ffffffffffffffff168267ffffffffffffffff16036123545760405162461bcd60e51b815260206004820152601060248201527f504f534954494f4e5f544f4f5f464152000000000000000000000000000000006044820152606401610960565b6124aa565b600161236d6102208b016102008c016141a8565b600281111561237e5761237e613d28565b036124625761239360e08a0160c08b01613cd5565b67ffffffffffffffff168267ffffffffffffffff16146123f55760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f46494e49534845445f494e424f58000000000000000000006044820152606401610960565b61240b6122cd368b90038b016101808c016140e2565b67ffffffffffffffff16156123545760405162461bcd60e51b815260206004820152601c60248201527f4e4f4e5f5a45524f5f46494e49534845445f504f535f494e5f4d5347000000006044820152606401610960565b60405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5354415455530000000000000000000000000000000000006044820152606401610960565b606b54604080517e84120c00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916284120c9160048083019260209291908290030181865afa15801561250b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061252f919061411f565b9050808367ffffffffffffffff16111561258b5760405162461bcd60e51b815260206004820152600e60248201527f494e424f585f504153545f454e440000000000000000000000000000000000006044820152606401610960565b8061259c60e08c0160c08d01613cd5565b67ffffffffffffffff1611156125f45760405162461bcd60e51b815260206004820152601360248201527f494e424f585f4e4f545f504f50554c41544544000000000000000000000000006044820152606401610960565b808367ffffffffffffffff160361261757612610816001614195565b945061261b565b8094505b8267ffffffffffffffff166000036126755760405162461bcd60e51b815260206004820152601160248201527f454d5054595f494e424f585f434f554e540000000000000000000000000000006044820152606401610960565b606b546001600160a01b03166316bf55796126916001866140fe565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815267ffffffffffffffff9091166004820152602401602060405180830381865afa1580156126ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612712919061411f565b935050505060006127328789610180018036038101906114ae9190613f5a565b905085811480612740575085155b61278c5760405162461bcd60e51b815260206004820152601960248201527f554e45585045435445445f415353455254494f4e5f48415348000000000000006044820152606401610960565b600061279782611c6e565b54600160c81b900460ff1660028111156127b3576127b3613d28565b146128005760405162461bcd60e51b815260206004820152600e60248201527f415353455254494f4e5f5345454e0000000000000000000000000000000000006044820152606401610960565b835460685460675460695460665460408051602080820196909652808201949094526bffffffffffffffffffffffff19606093841b16838501527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b8116607486015289831b16607c85015280516064818603018152608485018083528151918701919091206101448601835260009182905260a4860182905260c4860182905260e4860182905261010486018290526101249095018190528151928301825280835294820185905267ffffffffffffffff43811691830191909152909416159084015260a083015260016080830152506128fe856133cf565b60008281526074602090815260409182902083518154928501519385015160608601511515600160c01b027fffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff67ffffffffffffffff928316600160801b02167fffffffffffffff000000000000000000ffffffffffffffffffffffffffffffff968316600160401b027fffffffffffffffffffffffffffffffff00000000000000000000000000000000909616929093169190911793909317939093169290921717808255608083015183929182907fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff16600160c81b836002811115612a0657612a06613d28565b021790555060a0820151816001015590505087827fcd735133b6109f5afd9a07ea21b0b073f930113d2218547a799ee2f879fb36978b8688606854606754606960009054906101000a90046001600160a01b0316606660009054906101000a900467ffffffffffffffff16604051612a849796959493929190614227565b60405180910390a37f000000000000000000000000000000000000000000000000000000000000000015612b255760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b15919061411f565b6000838152607b60205260409020555b50979650505050505050565b6001600160a01b03821660009081526077602052604081205490612b558383614195565b6001600160a01b0385166000908152607760205260408120829055607880549293508592909190612b87908490614195565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a250505050565b6001600160a01b038116600090815260766020526040902060020154600160401b900460ff16612c355760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610960565b6001600160a01b03811660009081526076602052604081206001015460735490919082149080612c6484611c6e565b5467ffffffffffffffff161190508180612c7b5750805b610fcb5760405162461bcd60e51b815260206004820152600c60248201527f5354414b455f41435449564500000000000000000000000000000000000000006044820152606401610960565b6001600160a01b0382166000908152607660205260408120805480841115612d315760405162461bcd60e51b815260206004820152601060248201527f544f4f5f4c4954544c455f5354414b45000000000000000000000000000000006044820152606401610960565b6000612d3d8583613fae565b8584559050612d4c8682612b31565b60408051838152602081018790526001600160a01b038816917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a295945050505050565b6000612da485611c6e565b905060018154600160c81b900460ff166002811115612dc557612dc5613d28565b14612e125760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f50454e44494e470000000000000000000000000000000000000000006044820152606401610960565b612e25846114ae36869003860186613f5a565b8514612e735760405162461bcd60e51b815260206004820152600c60248201527f434f4e4649524d5f4441544100000000000000000000000000000000000000006044820152606401610960565b6000612e8c612e87368690038601866140e2565b613453565b90506000612ea7612ea2368790038701876140e2565b61345e565b606c546040517fa04cee6000000000000000000000000000000000000000000000000000000000815260048101839052602481018590529192506001600160a01b03169063a04cee6090604401600060405180830381600087803b158015612f0e57600080fd5b505af1158015612f22573d6000803e3d6000fd5b50505060738890555082547fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff167902000000000000000000000000000000000000000000000000001783556040805183815260208101839052815189927ffc42829b29c259a7370ab56c8f69fce23b5f351a9ce151da453281993ec0090c928290030190a250505050505050565b6001600160a01b03811660009081526076602052604090208054612fd48382612b31565b612fdd8361346a565b60408051828152600060208201526001600160a01b038516917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde691015b60405180910390a2505050565b6001600160a01b0381166000908152607760205260408120805490829055607880548291908490613059908490613fae565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b6040516001600160a01b0383166024820152604481018290526116d19084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613670565b6020810151600090815b602002015192915050565b3360009081526072602052604090205460ff16806131865750607a5460ff165b6131c25760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b6131ca611f49565b33600090815260766020526040902060020154600160401b900460ff16156132345760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f5354414b45440000000000000000000000000000000000006044820152606401610960565b611a103382613755565b607054611a10906001600160a01b031633308461386c565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d61327a565b3360009081526072602052604090205460ff16806132d15750607a5460ff165b61330d5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610960565b613315611f49565b6001600160a01b038216600090815260766020526040902060020154600160401b900460ff166133745760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610960565b6108c082826138bd565b600081602001516133928360000151613934565b6040516020016133a3929190614311565b604051602081830303815290604052805190602001209050919050565b6020810151600090600161315b565b805467ffffffffffffffff166000036133ff57805467ffffffffffffffff19164367ffffffffffffffff16179055565b8054600160401b900467ffffffffffffffff16600003611a105780547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16600160401b4367ffffffffffffffff1602179055565b80516000908161315b565b8051600090600161315b565b6001600160a01b03811660009081526076602052604090206002810154600160401b900460ff166134ca5760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610960565b60028101546075805467ffffffffffffffff909216916134ec90600190613fae565b815481106134fc576134fc6140cc565b600091825260209091200154607580546001600160a01b039092169167ffffffffffffffff8416908110613532576135326140cc565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806076600060758467ffffffffffffffff1681548110613582576135826140cc565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600201805467ffffffffffffffff191667ffffffffffffffff9290921691909117905560758054806135db576135db61432d565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0394909416815260769093525050604081208181556001810191909155600201805468ffffffffffffffffff19169055565b60006136c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166139c49092919063ffffffff16565b8051909150156116d157808060200190518101906136e39190614343565b6116d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610960565b6075805460018082019092557f9a8d93986a7b9e6294572ea6736696119c195c1a9f5eae642d3c5fcd44e49dea810180546001600160a01b0386167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915560408051608081018252858152607354602082810191825267ffffffffffffffff80871684860190815260608501898152600088815260769094528684209551865593519885019890985596516002909301805492511515600160401b0268ffffffffffffffffff1990931693909716929092171790945551919290917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde69161301a918690918252602082015260400190565b6040516001600160a01b0380851660248301528316604482015260648101829052610fcb9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016130ed565b6001600160a01b0382166000908152607660205260408120805490916138e38483614195565b80845560408051848152602081018390529192506001600160a01b038716917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a25050505050565b80518051602091820151828401518051908401516040517f476c6f62616c2073746174653a0000000000000000000000000000000000000095810195909552602d850193909352604d8401919091527fffffffffffffffff00000000000000000000000000000000000000000000000060c091821b8116606d85015291901b166075820152600090607d016133a3565b60606114b48484600085856001600160a01b0385163b613a265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610960565b600080866001600160a01b03168587604051613a429190614179565b60006040518083038185875af1925050503d8060008114613a7f576040519150601f19603f3d011682016040523d82523d6000602084013e613a84565b606091505b5091509150613a94828286613a9f565b979650505050505050565b60608315613aae5750816114b7565b825115613abe5782518084602001fd5b8160405162461bcd60e51b8152600401610960919061435e565b6040518060400160405280613aeb613afd565b8152602001613af8613afd565b905290565b60405180604001604052806002906020820280368337509192915050565b600060a08284031215613b2d57600080fd5b50919050565b60008060c08385031215613b4657600080fd5b82359150613b578460208501613b1b565b90509250929050565b600060208284031215613b7257600080fd5b5035919050565b60006102208284031215613b2d57600080fd5b6000806102408385031215613ba057600080fd5b613baa8484613b79565b94610220939093013593505050565b6001600160a01b0381168114611a1057600080fd5b600060208284031215613be057600080fd5b81356114b781613bb9565b6000806000806101008587031215613c0257600080fd5b8435935060208501359250613c1a8660408701613b1b565b9396929550929360e00135925050565b6000806000806000806101c08789031215613c4457600080fd5b8635955060208701359450613c5c8860408901613b1b565b935060e08701359250613c73886101008901613b1b565b91506101a087013590509295509295509295565b600080600060e08486031215613c9c57600080fd5b83359250613cad8560208601613b1b565b915060c084013590509250925092565b803567ffffffffffffffff81168114610a2857600080fd5b600060208284031215613ce757600080fd5b6114b782613cbd565b60008060006102608486031215613d0657600080fd5b83359250613d178560208601613b79565b915061024084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b60038110611a1057634e487b7160e01b600052602160045260246000fd5b600060c08201905067ffffffffffffffff808451168352806020850151166020840152806040850151166040840152506060830151151560608301526080830151613da681613d3e565b8060808401525060a083015160a083015292915050565b60008060408385031215613dd057600080fd5b8235613ddb81613bb9565b946020939093013593505050565b6000806000806101008587031215613e0057600080fd5b84359350613e118660208701613b1b565b939693955050505060c08201359160e0013590565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715613e5f57613e5f613e26565b60405290565b6040516101a0810167ffffffffffffffff81118282101715613e5f57613e5f613e26565b600060808284031215613e9b57600080fd5b613ea3613e3c565b905082601f830112613eb457600080fd5b613ebc613e3c565b806040840185811115613ece57600080fd5b845b81811015613ee8578035845260209384019301613ed0565b5081845285605f860112613efb57600080fd5b613f03613e3c565b92508291506080850186811115613f1957600080fd5b80821015613f3d57613f2a82613cbd565b8452602084019350602082019150613f19565b505060208301525092915050565b803560038110610a2857600080fd5b600060a08284031215613f6c57600080fd5b613f74613e3c565b613f7e8484613e89565b8152613f8c60808401613f4b565b60208201529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561096957610969613f98565b67ffffffffffffffff818116838216019080821115613fe257613fe2613f98565b5092915050565b8051610a2881613bb9565b805160028110610a2857600080fd5b80518015158114610a2857600080fd5b60006101a0828403121561402657600080fd5b61402e613e65565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120614092818501613fe9565b908201526101406140a4848201613ff4565b9082015261016083810151908201526101806140c1818501614003565b908201529392505050565b634e487b7160e01b600052603260045260246000fd5b6000608082840312156140f457600080fd5b6114b78383613e89565b67ffffffffffffffff828116828216039080821115613fe257613fe2613f98565b60006020828403121561413157600080fd5b5051919050565b60006020828403121561414a57600080fd5b81516114b781613bb9565b60005b83811015614170578181015183820152602001614158565b50506000910152565b6000825161418b818460208701614155565b9190910192915050565b8082018082111561096957610969613f98565b6000602082840312156141ba57600080fd5b6114b782613f4b565b6040818337604082016040820160005b60028110156142045767ffffffffffffffff6141ee83613cbd565b16835260209283019291909101906001016141d3565b50505061421360808201613f4b565b61421c81613d3e565b806080840152505050565b60006102e08201905088358252602089013560208301526040890135604083015260608901356060830152608089013561426081613bb9565b6001600160a01b0316608083015261427a60a08a01613cbd565b67ffffffffffffffff80821660a08501528061429860c08d01613cbd565b1660c085015250506142b060e0830160e08b016141c3565b6101806142c1818401828c016141c3565b50876102208301528661024083015285610260830152846102808301526142f46102a08301856001600160a01b03169052565b67ffffffffffffffff83166102c083015298975050505050505050565b61431a83613d3e565b60f89290921b8252600182015260210190565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561435557600080fd5b6114b782614003565b602081526000825180602084015261437d816040850160208701614155565b601f01601f1916919091016040019291505056fea2646970667358221220cae92db7db6bbe992ab78caff78500e4797fbf69c9048a829f93a3af041214d064736f6c63430008110033";

type RollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupUserLogic__factory extends ContractFactory {
  constructor(...args: RollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<RollupUserLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RollupUserLogic {
    return super.attach(address) as RollupUserLogic;
  }
  override connect(signer: Signer): RollupUserLogic__factory {
    return super.connect(signer) as RollupUserLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupUserLogicInterface {
    return new utils.Interface(_abi) as RollupUserLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupUserLogic {
    return new Contract(address, _abi, signerOrProvider) as RollupUserLogic;
  }
}
